<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>how to deploy django to heroku</title>
    <url>/2022/09/27/django_to_heroku/</url>
    <content><![CDATA[<p>winget heroku CLI</p>
<p>example:專案名稱 my_blog_project</p>
<p>先把專案env裏頭的pip list 寫出來 <strong>pip freeze &gt; requirements.txt</strong></p>
<p>heroku官網 create new app</p>
<p>桌面直接py -m venv herokuenv</p>
<p>把專案資料夾複製進herokuenv 裏頭 改名my_blog_projecthero</p>
<p>把my_blog_projecthero的.git資料夾刪掉</p>
<p>進入herokuenv虛擬環境 pip install gunicorn</p>
<p>並把my_blog_project的<strong>requirements.txt 通通載入安裝 pip install -r requirements.txt</strong></p>
<p>於my_blog_projecthero新增「Procfile」檔案 並撰寫 web: gunicorn my_blog_project.wsgi</p>
<p>於settings.py檔新增 STATIC_ROOT &#x3D; os.path.join(BASE_DIR, ‘static’)</p>
<p>接著執行 python manage.py collectstatic</p>
<p>接著 pip install whitenoise</p>
<ul>
<li><p>接著，開啟Django專案的settings.py，在MIDDLEWARE串列的地方，加入WhiteNoiseMiddleware，如下範例：</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
</ul>
<p>把舊的<strong>requirements.txt 刪除</strong></p>
<p>接著<strong>pip freeze &gt; requirements.txt 把最新的requirements導出來(包含gunicorn與whitenoise)</strong></p>
<p>把settings.py的 ALLOWED_HOSTS &#x3D; [‘*’]</p>
<p>退出虛擬環境 deactivate</p>
<p>heroku login</p>
<p>git init</p>
<p>heroku git:remote -a <app_name></p>
<p>git add .</p>
<p>git commit -m “first commit”</p>
<p>git push heroku master</p>
]]></content>
  </entry>
  <entry>
    <title>pandas organize</title>
    <url>/2022/09/27/pandas-regex/</url>
    <content><![CDATA[<h3 id="regex相關"><a href="#regex相關" class="headerlink" title="regex相關"></a>regex相關</h3><p>之二十二 -&gt;  之二二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;回傳門牌&#x27;] =  df.回傳門牌.replace(&#123;r&#x27;(之.)十(.)&#x27; : r&#x27;\1\2&#x27;&#125;, regex=True)</span><br></pre></td></tr></table></figure>


<p>段小小 -&gt; 段小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;地號_小段&#x27;]=df[&#x27;地號_小段&#x27;].str.replace(r&#x27;小$&#x27;, &#x27;&#x27;, regex=True)</span><br></pre></td></tr></table></figure>


<p>蔦松路56巷46號五樓之一 get 五樓之一</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;號之後&#x27;] = df[&#x27;回傳門牌&#x27;].str.extract(&#x27;(?&lt;=號)(.*)&#x27;)</span><br></pre></td></tr></table></figure>


<p>蔦松路56巷46號五樓之一 get  蔦松路56巷46號</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;號之前包含號&#x27;]= df[&#x27;回傳門牌&#x27;].str.extract(&#x27;(.*號)&#x27;)</span><br></pre></td></tr></table></figure>


<p>七樓之七 -&gt; 7樓之7</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict1 = &#123;&quot;一&quot; : &#x27;1&#x27;,&quot;二&quot; : &#x27;2&#x27;,&quot;三&quot; : &#x27;3&#x27;,&quot;四&quot; : &#x27;4&#x27;,&quot;五&quot; : &#x27;5&#x27;</span><br><span class="line">,&quot;六&quot; : &#x27;6&#x27;,&quot;七&quot; : &#x27;7&#x27;,&quot;八&quot; : &#x27;8&#x27;,&quot;九&quot; : &#x27;9&#x27;&#125;</span><br><span class="line">df[&quot;號之後&quot;]= df[&quot;號之後&quot;].replace( dict1,regex=True)</span><br></pre></td></tr></table></figure>

<p>忠孝里忠孝東路 -&gt; 忠孝東路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;地址&#x27;]=df[&#x27;地址&#x27;].str.replace(r&#x27;^..里&#x27;, &#x27;&#x27;, regex=True)</span><br></pre></td></tr></table></figure>

<p>2十 -&gt; 2@0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;號之後&#x27;] =  df.號之後.replace(&#123;r&#x27;(\d)十&#x27; : r&#x27;\1@0&#x27;&#125;, regex=True)</span><br></pre></td></tr></table></figure>

<p>十1 -&gt; 1@1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;號之後&#x27;] =  df.號之後.replace(&#123;r&#x27;十(\d)&#x27; : r&#x27;1@\1&#x27;&#125;, regex=True)</span><br></pre></td></tr></table></figure>

<h3 id="filter相關"><a href="#filter相關" class="headerlink" title="filter相關"></a>filter相關</h3><p>left join two dataframe</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res = pd.merge(df1,df2, on=[&#x27;行政區&#x27;,&#x27;縣市&#x27;,&#x27;地址&#x27;],how=&#x27;left&#x27;)</span><br></pre></td></tr></table></figure>


<p>column ‘bkey’ filter contains ‘查’</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df= df[res[&quot;bkey&quot;].str.contains(&#x27;查&#x27;)==False]</span><br></pre></td></tr></table></figure>



<p>column ‘bkey’ filter not contains ‘查’</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df= df[~df[&quot;bkey&quot;].str.contains(&quot;查&quot;)]</span><br></pre></td></tr></table></figure>


<p>column ‘地號_小段’ filter not NaN</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res[res[&#x27;地號_小段&#x27;].notna()]</span><br></pre></td></tr></table></figure>


<p>Change the value of ‘地號_段_小段’ condition based on whether ‘地號_小段’ is null  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;地號_段_小段&#x27;] = np.where(df[&#x27;地號_小段&#x27;].isnull(), df[&#x27;地號_段_小段&#x27;], df[&#x27;地號_段_小段&#x27;]+df[&#x27;地號_小段&#x27;]+&quot;小段&quot;)</span><br></pre></td></tr></table></figure>


<p>Change the value of ‘完成日’ condition based on whether ‘完成日’ contains(‘民國’)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;完成日&#x27;] = np.where(df[&#x27;完成日&#x27;].str.contains(&#x27;民國&#x27;), df[&#x27;完成日&#x27;], &quot;民國&quot;+df[&#x27;完成日&#x27;])</span><br></pre></td></tr></table></figure>


<p>15號二樓之1 -&gt; 15號<br>13號3樓     -&gt; 13號</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;地址&#x27;] = df[&#x27;地址&#x27;].str.replace(&#x27;(?&lt;=\d號).*&#x27;,&#x27;&#x27;, regex=True)</span><br></pre></td></tr></table></figure>


<p>fill in the blanks in order</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res[&#x27;使照號&#x27;].fillna(method=&#x27;ffill&#x27;, inplace=True)</span><br></pre></td></tr></table></figure>



<p>column ‘地址’ filter contains’里’ not NaN</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[df[&#x27;地址&#x27;].str.contains(&quot;里&quot;,na= False)]</span><br></pre></td></tr></table></figure>


<p>00000號  -&gt; 00000<br>0001號 -&gt; 0001</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;使照提取&#x27;] = df[&#x27;使照相關&#x27;].str.extract(&#x27;(\d&#123;1,5&#125;)(?=號)&#x27;)</span><br></pre></td></tr></table></figure>


<p>005 -&gt; 00005</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;使照提取&#x27;] = df[&#x27;使照提取&#x27;].str.zfill(5)</span><br></pre></td></tr></table></figure>


<p>add new column by combine another column </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df[&#x27;使照提取&#x27;]= df[&#x27;完工日&#x27;].str[:3] +&#x27;-&#x27;+ df[&#x27;使照提取&#x27;]</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
