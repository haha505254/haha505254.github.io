<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python Tutorial</title>
    <url>/2022/09/28/Python-Tutorial/</url>
    <content><![CDATA[<ul>
<li><p>變數</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = ”小白”</span><br><span class="line"></span><br><span class="line">age = <span class="number">87</span></span><br><span class="line"></span><br><span class="line">is_male = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">字串+變數</span><br><span class="line"></span><br><span class="line">name = <span class="string">&quot;小白&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello world!Python&quot;</span>+name)</span><br></pre></td></tr></table></figure>
</li>
<li><p>字串</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">換行\n</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello world!  \n  Python&quot;</span>)</span><br><span class="line"></span><br><span class="line">如何印出 hello”world</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(”hello\”world”)</span><br><span class="line"></span><br><span class="line">字串函式</span><br><span class="line"></span><br><span class="line">phrase = “HELLO”</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(phrase.lower()) 轉小寫</span><br><span class="line"></span><br><span class="line">判斷是否大寫 是則回傳<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">phrase = <span class="string">&quot;HELLO&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(phrase.isupper())</span><br><span class="line"></span><br><span class="line">中括號用法(擷取字串數字)</span><br><span class="line"></span><br><span class="line">phrase = <span class="string">&quot;HELLO&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(phrase[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">ans:E</span><br><span class="line"></span><br><span class="line">尋找字元位於字串的第幾位</span><br><span class="line"></span><br><span class="line">phrase = <span class="string">&quot;HELOL&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(phrase.index(<span class="string">&quot;L&quot;</span>))</span><br><span class="line"></span><br><span class="line">ans:<span class="number">2</span></span><br><span class="line"></span><br><span class="line">在字串中替換字元</span><br><span class="line"></span><br><span class="line">phrase = <span class="string">&quot;HELOL&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(phrase.replace(<span class="string">&quot;L&quot;</span>,<span class="string">&quot;A&quot;</span>))</span><br><span class="line"></span><br><span class="line">ans:HEAOA</span><br><span class="line"></span><br><span class="line">字串轉數字</span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(s))</span><br></pre></td></tr></table></figure>
</li>
<li><p>數字</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">77.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(-<span class="number">77.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">8</span>+<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">8</span>*<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">除法有兩種 一般除法與整數除法</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">8</span>/<span class="number">5</span>)  ans:<span class="number">1.6</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">8</span>//<span class="number">5</span>) ans:<span class="number">1</span></span><br><span class="line"></span><br><span class="line">變數計算</span><br><span class="line"></span><br><span class="line">number = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(number*<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">取餘數</span><br><span class="line"></span><br><span class="line">number = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(number%<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">數字轉字串</span><br><span class="line"></span><br><span class="line">n = <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(n))</span><br><span class="line"></span><br><span class="line">取絕對值</span><br><span class="line"></span><br><span class="line">num = -<span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">abs</span>(num))</span><br><span class="line"></span><br><span class="line">次方函式</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">取最大值</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">取最小值</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">取四捨五入</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(<span class="number">4.4</span>))</span><br><span class="line"></span><br><span class="line">無條件捨去</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(floor(<span class="number">4.6</span>))</span><br><span class="line"></span><br><span class="line">無條件進位</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ceil(<span class="number">5.8</span>))</span><br><span class="line"></span><br><span class="line">開根號</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sqrt(<span class="number">64</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><p>簡易計算機(輸入數字)</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num1 = <span class="built_in">input</span>(”請輸入第一個數字:”)</span><br><span class="line"></span><br><span class="line">num2 = <span class="built_in">input</span>(”請輸入第二個數字:”)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(num1)+<span class="built_in">float</span>(num2))</span><br></pre></td></tr></table></figure>
</li>
<li><p>列表</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">數字</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">字串</span><br><span class="line"></span><br><span class="line">friends = [”小黑”,”小黃”,”小綠”]</span><br><span class="line"></span><br><span class="line">多種形態</span><br><span class="line"></span><br><span class="line">things = [<span class="number">90</span>,”小黑”,<span class="literal">True</span>]</span><br><span class="line"></span><br><span class="line">取得列表某一數字</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(score[-<span class="number">1</span>])    ans:<span class="number">80</span></span><br><span class="line"></span><br><span class="line">取列表中間數字</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(score[<span class="number">0</span>:<span class="number">2</span>])  第<span class="number">0</span>開始取 取到<span class="number">2</span>之前(不包含<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">改列表間的數字</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">score[<span class="number">0</span>]=<span class="number">30</span></span><br><span class="line"></span><br><span class="line">把陣列相加</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">things = [<span class="number">90</span>,<span class="string">&quot;小黑&quot;</span>,<span class="literal">True</span>]</span><br><span class="line"></span><br><span class="line">score.extend(things)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(score)</span><br><span class="line"></span><br><span class="line">ans : [<span class="number">30</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="string">&#x27;小黑&#x27;</span>, <span class="literal">True</span>]</span><br><span class="line"></span><br><span class="line">把陣列最後方加新的值</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">score.append(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">ans : [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">30</span>]</span><br><span class="line"></span><br><span class="line">陣列中間插入新的值</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">score.insert(<span class="number">2</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">ans : [<span class="number">50</span>,<span class="number">60</span>,<span class="number">30</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">刪掉陣列特定的值</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">score.remove(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">清空陣列</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">score.clear()</span><br><span class="line"></span><br><span class="line">直接移除陣列最後一個</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">score.pop()</span><br><span class="line"></span><br><span class="line">ans :  [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>]</span><br><span class="line"></span><br><span class="line">由小到大排列</span><br><span class="line"></span><br><span class="line">score.sort()</span><br><span class="line"></span><br><span class="line">反轉陣列</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"> score.reverse()</span><br><span class="line"></span><br><span class="line">ans : [<span class="number">10</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">30</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">50</span>]</span><br><span class="line"></span><br><span class="line">查陣列中的元素位於第幾位</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(score.index(<span class="number">60</span>))</span><br><span class="line"></span><br><span class="line">ans: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">數元素有幾個</span><br><span class="line"></span><br><span class="line">score = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(score.count(<span class="number">50</span>))</span><br><span class="line"></span><br><span class="line">ans:<span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>元祖</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">與列表的差別在 一旦創建了元祖 就不能新增修改刪除</span><br><span class="line"></span><br><span class="line">score = (<span class="number">90.80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">元祖用在不會被更動的元素e.g.經緯度</span><br><span class="line"></span><br><span class="line">data = (<span class="number">123456</span>,<span class="number">456789</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>函式</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">定義一個函示名稱為hello 功能是say hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">name,age</span>):</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>+name+age+<span class="string">&quot;歲&quot;</span>)</span><br><span class="line"></span><br><span class="line">hello(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;55&quot;</span>)</span><br><span class="line"></span><br><span class="line">須注意 數字無法與字串相連</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">name,age</span>):</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>+name+<span class="built_in">str</span>(age)+<span class="string">&quot;歲&quot;</span>)</span><br><span class="line"></span><br><span class="line">hello(<span class="string">&quot;aaa&quot;</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">ans : helloaaa55歲</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>用法</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">num1,num2</span>):</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(num1+num2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">ans:</span><br><span class="line"></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>if 判斷</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">score = <span class="number">70</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> score ==<span class="number">100</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;100&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> score&gt;=<span class="number">80</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;80&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> score&gt;=<span class="number">60</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;60&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-100&quot;</span>)</span><br><span class="line"></span><br><span class="line">ans:-<span class="number">100</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">score = <span class="number">100</span></span><br><span class="line">rainy = <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> score==<span class="number">100</span> <span class="keyword">and</span> rainy:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;100&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;10&quot;</span>)</span><br><span class="line"></span><br><span class="line">ans:<span class="number">10</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>字典Dictionary</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">含有 key 鍵 value 值</span><br><span class="line"></span><br><span class="line">dic = &#123;<span class="string">&quot;蘋果&quot;</span>:<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;香蕉&quot;</span>:<span class="string">&quot;banana&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dic[<span class="string">&quot;蘋果&quot;</span>])</span><br><span class="line"></span><br><span class="line">ans: apple</span><br></pre></td></tr></table></figure>
</li>
<li><p>while迴圈</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">ans:</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>猜數字遊戲</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> secret!=guess:</span><br><span class="line">    guess = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;請輸入&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> guess&lt;secret:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;大一點&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> guess&gt;secret:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;小一點&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;恭喜&quot;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>for迴圈</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> 變數 <span class="keyword">in</span> 字串<span class="keyword">or</span>列表</span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">&quot;小白你好&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(letter)</span><br><span class="line"></span><br><span class="line">ans:</span><br><span class="line">小</span><br><span class="line">白</span><br><span class="line">你</span><br><span class="line">好</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>]:</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line"></span><br><span class="line">ans:</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">ans:</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">7</span>):</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">ans:</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>for+函式造次方算式</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">power</span>(<span class="params">num,pow_num</span>):</span><br><span class="line">    result = num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pow_num-<span class="number">1</span>):</span><br><span class="line">        result = result * num</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="built_in">print</span>(power(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>二維列表 巢狀迴圈</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = [</span><br><span class="line">    [<span class="number">1</span>,<span class="number">3</span>],</span><br><span class="line">    [<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">若是要取得<span class="number">4</span>這個數字</span><br><span class="line"><span class="built_in">print</span>(num[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">row = 行 (橫)</span><br><span class="line">column = 列 (直) 柱子</span><br><span class="line">在繁體中文版的Excel <span class="number">2003</span>裡面，row叫做「列」，column叫做「欄」</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> num:</span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> row:</span><br><span class="line">        <span class="built_in">print</span>(col)</span><br><span class="line">ans:</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>檔案讀取 寫入</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">檔案讀取 相對路徑(以當下的py檔案路徑為準)</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(file.read())</span><br><span class="line">file.close</span><br><span class="line"></span><br><span class="line">只讀一行</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(file.readline())</span><br><span class="line">file.close</span><br><span class="line"></span><br><span class="line">逐行讀取</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">file.close</span><br><span class="line"></span><br><span class="line">把每行放到陣列裡面</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(file.readlines())</span><br><span class="line">file.close</span><br></pre></td></tr></table></figure>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">檔案覆寫</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;w&quot;</span>)</span><br><span class="line">file.write(<span class="string">&quot;ok&quot;</span>)</span><br><span class="line">file.close</span><br><span class="line"></span><br><span class="line">檔案寫入 不覆蓋</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;a&quot;</span>)</span><br><span class="line">file.write(<span class="string">&quot;\nok&quot;</span>)</span><br><span class="line">file.close</span><br><span class="line"></span><br><span class="line">若要輸入中文 則需加入編碼utf-<span class="number">8</span></span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">file.write(<span class="string">&quot;\nok你好&quot;</span>)</span><br><span class="line">file.close</span><br></pre></td></tr></table></figure>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">推薦寫法 可避免忘記關閉file</span><br><span class="line"></span><br><span class="line">檔案寫入</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(<span class="string">&quot;\nokwith&quot;</span>)</span><br><span class="line"></span><br><span class="line">檔案讀取</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>,errors=<span class="string">&#x27;ignore&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="built_in">print</span>(file.read())</span><br></pre></td></tr></table></figure>
</li>
<li><p>類別</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 汽車類別</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cars</span>:</span><br><span class="line">    <span class="comment"># 建構式</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, color, seat</span>):</span><br><span class="line">        self.color = color  <span class="comment"># 顏色屬性</span></span><br><span class="line">        self.seat = seat  <span class="comment"># 座位屬性</span></span><br><span class="line">    <span class="comment"># 方法(Method)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drive</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;My car is <span class="subst">&#123;self.color&#125;</span> and <span class="subst">&#123;self.seat&#125;</span> seats.&quot;</span>)</span><br><span class="line"></span><br><span class="line">car1 = Cars(<span class="string">&quot;red&quot;</span>,<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">car1.drive()</span><br></pre></td></tr></table></figure>
</li>
<li><p>繼承</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 交通工具(基底類別)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Transportation</span>:</span><br><span class="line">    <span class="comment"># 建構式</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.color = <span class="string">&quot;white&quot;</span>  <span class="comment">#顏色屬性</span></span><br><span class="line">    <span class="comment"># 駕駛方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drive</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;drive method is called.&quot;</span>)</span><br><span class="line"><span class="comment"># 汽車子類別</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>(<span class="title class_ inherited__">Transportation</span>):</span><br><span class="line">    <span class="comment"># 加速方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">accelerate</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;accelerate is method called.&quot;</span>)</span><br><span class="line"><span class="comment"># 飛機子類別</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Airplane</span>(<span class="title class_ inherited__">Transportation</span>):</span><br><span class="line">    <span class="comment"># 飛行方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;fly method is called.&quot;</span>)</span><br><span class="line"></span><br><span class="line">mazda = Car()</span><br><span class="line">mazda.drive()</span><br><span class="line">mazda.accelerate()</span><br><span class="line"><span class="built_in">print</span>(mazda.color)</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>how to deploy django to heroku</title>
    <url>/2022/09/27/django-to-heroku/</url>
    <content><![CDATA[<h1 id="deploy-django-to-heroku"><a href="#deploy-django-to-heroku" class="headerlink" title="deploy django to heroku"></a>deploy django to heroku</h1><p>winget heroku CLI</p>
<p>example:專案名稱 my_blog_project</p>
<p>專案結構應如下圖所示</p>
<p><img src="https://res.cloudinary.com/dqgfa7f03/image/upload/v1664330213/Untitled_mcirk5.png"></p>
<p>先把專案env裏頭的pip list 寫出來 <strong>pip freeze &gt; requirements.txt</strong></p>
<p>heroku官網 create new app</p>
<p>桌面直接py -m venv herokuenv</p>
<p>把專案資料夾複製進herokuenv 裏頭 改名my_blog_projecthero</p>
<p>把my_blog_projecthero的.git資料夾刪掉</p>
<p>進入herokuenv虛擬環境 pip install gunicorn</p>
<p>並把my_blog_project的<strong>requirements.txt 通通載入安裝 pip install -r requirements.txt</strong></p>
<p>於my_blog_projecthero新增「Procfile」檔案 並撰寫 web: gunicorn my_blog_project.wsgi</p>
<p>於settings.py檔新增 STATIC_ROOT &#x3D; os.path.join(BASE_DIR, ‘static’)</p>
<p>接著執行 python manage.py collectstatic</p>
<p>接著 pip install whitenoise</p>
<ul>
<li><p>接著，開啟Django專案的settings.py，在MIDDLEWARE串列的地方，加入WhiteNoiseMiddleware，如下範例：</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
</ul>
<p>把舊的<strong>requirements.txt 刪除</strong></p>
<p>接著<strong>pip freeze &gt; requirements.txt 把最新的requirements導出來(包含gunicorn與whitenoise)</strong></p>
<p>把settings.py的 ALLOWED_HOSTS &#x3D; [‘*’]</p>
<p>退出虛擬環境 deactivate</p>
<p>heroku login</p>
<p>git init</p>
<p>heroku git:remote -a <app_name></p>
<p>git add .</p>
<p>git commit -m “first commit”</p>
<p>git push heroku master</p>
]]></content>
      <tags>
        <tag>django</tag>
        <tag>heroku</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql-for-ubuntu-install</title>
    <url>/2022/09/28/mysql-for-ubuntu-install/</url>
    <content><![CDATA[<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><ul>
<li><p>mtsql 建立流程</p>
<ul>
<li><strong><a href="#%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD"><code>前置作業</code></a></strong></li>
<li><strong><a href="#Apache2%E5%AE%89%E8%A3%9D"><code>Apache2安裝</code></a></strong></li>
<li><strong><a href="#mysql%E5%AE%89%E8%A3%9D"><code>mysql安裝</code></a></strong>  </li>
<li><strong><a href="#phpmyadmin%E5%AE%89%E8%A3%9D"><code>phpmyadmin安裝</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="../README.md"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">更新Ubuntu Server</span><br><span class="line">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt dist-upgrade</span><br><span class="line"></span><br><span class="line">如果無法更新(yes之後跳出很多無法連接伺服器)</span><br><span class="line">顯示應用程式&gt;軟體更新&gt;設定&gt;標籤:Ubuntu軟體&gt;下載自:改成主要伺服器</span><br></pre></td></tr></table></figure>

<h2 id="Apache2安裝"><a href="#Apache2安裝" class="headerlink" title="Apache2安裝"></a>Apache2安裝</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝:</span></span><br><span class="line">sudo apt install apache2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 確認apache2開啟:</span></span><br><span class="line">sudo systemctl status apache2</span><br></pre></td></tr></table></figure>

<h2 id="mysql安裝"><a href="#mysql安裝" class="headerlink" title="mysql安裝"></a>mysql安裝</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#mysql安裝:</span></span><br><span class="line">sudo apt install mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#設定mysql資訊:</span></span><br><span class="line">sudo mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="comment">#執行mysql:</span></span><br><span class="line">sudo mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#改密碼:</span></span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;密碼&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#改密碼之後的登入指令:</span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<h2 id="phpmyadmin安裝"><a href="#phpmyadmin安裝" class="headerlink" title="phpmyadmin安裝"></a>phpmyadmin安裝</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安裝:</span></span><br><span class="line">sudo apt-get install phpmyadmin</span><br><span class="line">選擇[apach2]&gt;&gt;是&gt;&gt;輸入密碼&gt;確認密碼</span><br><span class="line"></span><br><span class="line"><span class="comment">#進入phpmyadmin網頁:</span></span><br><span class="line">http://localhost/phpmyadmin/</span><br><span class="line"></span><br><span class="line">因為 phpMyAdmin 的程式並不是放在 Apache2 預設的目錄</span><br><span class="line">所以要用 include 讓 Apache2 把 phpMyAdmin 的資料讀進去。</span><br><span class="line"></span><br><span class="line"><span class="comment">#備註:如果一樣連不進去</span></span><br><span class="line">sudo nano /etc/apache2/apache2.conf</span><br><span class="line">打開 Apache2 的設定檔</span><br><span class="line">在裡面加上下面這一行。</span><br><span class="line"></span><br><span class="line">Include /etc/phpmyadmin/apache.conf</span><br><span class="line"></span><br><span class="line">安裝完成後重新啟動 Apache2</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>git-related</title>
    <url>/2022/09/28/git-related/</url>
    <content><![CDATA[<h1 id="gitlab-github-相關指令整理"><a href="#gitlab-github-相關指令整理" class="headerlink" title="gitlab github 相關指令整理"></a>gitlab github 相關指令整理</h1><ul>
<li><p>ubuntu 設定</p>
<ul>
<li><strong><a href="#%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A"><code>環境設定</code></a></strong></li>
<li><strong>[<code>設定 SSH 金鑰</code>](#設定 SSH 金鑰)</strong></li>
<li><strong><a href="#%E6%96%B0%E5%BB%BA%E5%B0%88%E6%A1%88%E6%B5%81%E7%A8%8B"><code>新建專案流程</code></a></strong></li>
<li><strong><a href="#%E5%9F%BA%E6%9C%AC%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B"><code>基本開發流程</code></a></strong></li>
<li><strong><a href="#%E9%96%8B%E7%99%BC%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4"><code>開發常用指令</code></a></strong></li>
<li><strong><a href="#%E5%81%B6%E7%88%BE%E6%9C%89%E7%94%A8%E7%9A%84%E6%8C%87%E4%BB%A4"><code>偶爾有用的指令</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="https://haha505254.github.io/archives/"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="環境設定"><a href="#環境設定" class="headerlink" title="環境設定"></a>環境設定</h2><p>gitlab github 都是版本控制平台</p>
<h3 id="設定-SSH-金鑰"><a href="#設定-SSH-金鑰" class="headerlink" title="設定 SSH 金鑰"></a>設定 SSH 金鑰</h3><p>在 push 或是 clone 時，為了要讓 gitlab 或 github 認得這台電腦就是此帳號的使用者，所以我們可以透過設定 SSH 來當成認證的憑據。  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">＃ 建立</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">＃ 查看金鑰</span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>新增至 gitLab</p>
<blockquote>
<p>gitLab 首頁右上角 &gt; setting &gt; SSH Keys &gt; 貼上金鑰</p>
</blockquote>
<p>新增至 github</p>
<blockquote>
<p>github 首頁右上角 &gt; settings &gt; SSH and GPG keys &gt; New SSH key &gt; 貼上金鑰</p>
</blockquote>
<h2 id="新建專案流程"><a href="#新建專案流程" class="headerlink" title="新建專案流程"></a>新建專案流程</h2><p>新建專案有分個人和組織，若要多人開發的話可以選擇組織專案</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在儲存庫先建立專案</span></span><br><span class="line"><span class="comment"># 複製專案內的 ssh連結</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> ssh連結</span><br><span class="line"></span><br><span class="line"><span class="comment"># 這樣就可以在剛建立的專案開發了</span></span><br></pre></td></tr></table></figure>

<h3 id="基本開發流程"><a href="#基本開發流程" class="headerlink" title="基本開發流程"></a>基本開發流程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~~單人開發~~</span></span><br><span class="line">git <span class="built_in">clone</span> 專案連結</span><br><span class="line"><span class="built_in">cd</span> 專案</span><br><span class="line"><span class="comment"># 編輯專案</span></span><br><span class="line">git add 檔案.py</span><br><span class="line">git commit -m <span class="string">&#x27;簡短的說明&#x27;</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="comment"># ~~多人開發~~</span></span><br><span class="line">git <span class="built_in">clone</span> 專案連結</span><br><span class="line"><span class="built_in">cd</span> 專案</span><br><span class="line">git remote add mainline 組織專案連結</span><br><span class="line"><span class="comment"># 編輯專案</span></span><br><span class="line">git add 檔案.py</span><br><span class="line">git commit -m <span class="string">&#x27;簡短的說明&#x27;</span></span><br><span class="line">git push</span><br><span class="line">git pull mainline master <span class="comment"># for gitlab</span></span><br><span class="line"><span class="comment"># 解決衝突 &gt; add &gt; commit</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h2 id="開發常用指令"><a href="#開發常用指令" class="headerlink" title="開發常用指令"></a>開發常用指令</h2><h3 id="名詞說明"><a href="#名詞說明" class="headerlink" title="名詞說明"></a>名詞說明</h3><table>
<thead>
<tr>
<th>名詞</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>本地專案</td>
<td>已經clone到自己電腦的專案</td>
</tr>
<tr>
<td>個人專案</td>
<td>分支會建立在個人底下的專案</td>
</tr>
<tr>
<td>組織專案</td>
<td>在組織裡的專案</td>
</tr>
<tr>
<td>遠端</td>
<td>在網路上，這裡只版本控制平台</td>
</tr>
<tr>
<td>分支(fork)</td>
<td>組織專案要可以編輯就需要建立自己的分支</td>
</tr>
</tbody></table>
<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 專案連結</span><br><span class="line"><span class="comment"># 把專案克隆到本地(記得要 cd 進去專案內喔)</span></span><br><span class="line"></span><br><span class="line">git status</span><br><span class="line"><span class="comment">#查看當前狀況</span></span><br><span class="line"></span><br><span class="line">git pull</span><br><span class="line"><span class="comment"># 把專案的更新拉到本地</span></span><br><span class="line"></span><br><span class="line">git add 檔案.py</span><br><span class="line"><span class="comment"># 新增你要添加進本地專案的檔案</span></span><br><span class="line"><span class="comment"># 也可以使用 git add . 加入全部的檔案</span></span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&#x27;簡短的說明&#x27;</span></span><br><span class="line"><span class="comment"># 為你的變更做個簡短的說明</span></span><br><span class="line"><span class="comment"># 也可以使用 git commit 寫入詳細的說明</span></span><br><span class="line"></span><br><span class="line">git push</span><br><span class="line"><span class="comment"># 把本地的檔案推到個人專案上</span></span><br><span class="line"></span><br><span class="line">git remote add mainline 組織專案連結</span><br><span class="line"><span class="comment"># 本地專案新增 組織專案的連結 設為 mainline</span></span><br><span class="line"></span><br><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 查看遠端專案連結</span></span><br><span class="line"></span><br><span class="line">git pull mainline master <span class="comment"># for gitlab</span></span><br><span class="line">git pull mainline main <span class="comment"># for github</span></span><br><span class="line"><span class="comment"># 組織專案與本地專案合併</span></span><br></pre></td></tr></table></figure>

<h3 id="偶爾有用的指令"><a href="#偶爾有用的指令" class="headerlink" title="偶爾有用的指令"></a>偶爾有用的指令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard</span><br><span class="line"><span class="comment"># 放棄本地專案的變更</span></span><br><span class="line"></span><br><span class="line">git commit --amend</span><br><span class="line"><span class="comment"># 修改最後一次 commit</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 當您想記錄工作目錄和索引的當前狀態，但又想回到干淨的工作目錄時，請使用 git stash。該命令保存您的本地修改並恢復</span></span><br><span class="line"></span><br><span class="line">git stash</span><br><span class="line"><span class="comment"># 隱藏變更</span></span><br><span class="line"></span><br><span class="line">git stash list</span><br><span class="line"><span class="comment"># 查看隱藏變更</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目前程式碼已經還原到最初階段</span></span><br><span class="line"><span class="comment"># 可以更新程式碼</span></span><br><span class="line"><span class="comment"># 處理緊急事項</span></span><br><span class="line"></span><br><span class="line">git stash pop</span><br><span class="line"><span class="comment"># 還原</span></span><br></pre></td></tr></table></figure>

<h2 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h2><p>建議每次commit開頭都添加類別，方便之後維護</p>
<p>ex:</p>
<blockquote>
<p>🐛 fix: 修正XXX錯誤<br>✨ feat: 增加git教學說明</p>
</blockquote>
<table>
<thead>
<tr>
<th>表情符號 類型</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>📖 docs:</td>
<td>文檔</td>
</tr>
<tr>
<td>🚧 WIP:</td>
<td>正在進行的工作(Work In Progress)</td>
</tr>
<tr>
<td>🚨 test:</td>
<td>測試</td>
</tr>
<tr>
<td>🔒 Security:</td>
<td>安全修復</td>
</tr>
<tr>
<td>🐛 fix:</td>
<td>錯誤修正</td>
</tr>
<tr>
<td>✨ feat:</td>
<td>新功能</td>
</tr>
<tr>
<td>💩 hankey:</td>
<td>糟糕的代碼</td>
</tr>
<tr>
<td>🗑️ removal:</td>
<td>拆除</td>
</tr>
<tr>
<td>♻️ refactoring:</td>
<td>重構</td>
</tr>
<tr>
<td>🐎 Performance:</td>
<td>性能</td>
</tr>
<tr>
<td>📦 package:</td>
<td>封裝</td>
</tr>
<tr>
<td>⬆️ Upgrading:</td>
<td>升級</td>
</tr>
<tr>
<td>⬇️ Downgrading:</td>
<td>降級</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>git</tag>
        <tag>gitlab</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>py-datetime</title>
    <url>/2022/09/28/py-datetime/</url>
    <content><![CDATA[<h1 id="時間處理"><a href="#時間處理" class="headerlink" title="時間處理"></a>時間處理</h1><p>python-dateutil</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> dateutil.relativedelta <span class="keyword">import</span> relativedelta</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 算時間</span></span><br><span class="line">tomorrow = timezone.now() + relativedelta(days=<span class="number">1</span>)</span><br><span class="line">datetime.now() + relativedelta(months=-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重組時間</span></span><br><span class="line">target_clear_time = tz.localize(datetime(tomorrow.year, tomorrow.month, tomorrow.day, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="time"><a href="#time" class="headerlink" title="time"></a>time</h2><ul>
<li>計時</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">t0 = time.time()</span><br><span class="line">t1 = time.time()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;耗時:&#123;&#125;s&quot;</span>.<span class="built_in">format</span>(t1 - t0))</span><br></pre></td></tr></table></figure>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 2019-03-20 11:45:39</span></span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, time.localtime()))</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>py-related</title>
    <url>/2022/09/28/py-related/</url>
    <content><![CDATA[<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><ul>
<li><p>python 環境</p>
<ul>
<li><strong><a href="#%E8%99%9B%E6%93%AC%E7%92%B0%E5%A2%83"><code>虛擬環境</code></a></strong></li>
<li><strong><a href="#jupyter"><code>jupyter</code></a></strong></li>
</ul>
</li>
<li><p>python 技巧</p>
<ul>
<li><strong><a href="#str"><code>str</code></a></strong></li>
<li><strong><a href="#class"><code>class</code></a></strong></li>
<li><strong><a href="#except"><code>except</code></a></strong></li>
<li><strong><a href="#format"><code>format</code></a></strong></li>
</ul>
</li>
<li><p>python 套件使用</p>
<ul>
<li><strong><a href="#shutil"><code>shutil</code></a></strong></li>
<li><strong><a href="#imp"><code>imp</code></a></strong></li>
<li><strong><a href="#pilow"><code>pilow</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="../README.md"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="虛擬環境"><a href="#虛擬環境" class="headerlink" title="虛擬環境"></a>虛擬環境</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝虛擬環境</span></span><br><span class="line">sudo apt install python3-venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 py36 環境</span></span><br><span class="line">python3 -m venv py36</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進入 py36 環境</span></span><br><span class="line"><span class="built_in">source</span> /home/bard/venv/py36/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出虛擬環境</span></span><br><span class="line">deactivate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若內建沒有 python3.6</span></span><br><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install python3.6</span><br><span class="line">sudo apt install python3.6-venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若使用TK需注意</span></span><br><span class="line">sudo apt install python3-tk</span><br><span class="line">sudo apt install python3.6-tk</span><br></pre></td></tr></table></figure>

<h2 id="jupyter"><a href="#jupyter" class="headerlink" title="jupyter"></a>jupyter</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install jupyter</span></span><br><span class="line">pip3 install jupyter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 啟動</span></span><br><span class="line">jupyter notebook</span><br><span class="line"></span><br><span class="line"><span class="comment"># jupyter notebook 讀取大檔案的時候 解決方法</span></span><br><span class="line">jupyter notebook --NotebookApp.iopub_data_rate_limit=1e10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 虛擬環境使用jupyter notebook</span></span><br><span class="line">pip3 install ipykernel</span><br><span class="line">python3 -m ipykernel install --user --name=tensorflow3</span><br><span class="line">jupyter notebook</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意使用python名稱 會從 python3 更改為 tensorflow3</span></span><br><span class="line"><span class="comment"># 若無變更可在 kernel &gt; Change kernel &gt; tensorflow3</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="str"><a href="#str" class="headerlink" title="str"></a>str</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span>.strip() <span class="comment">#去除字符串兩邊的空格</span></span><br><span class="line"><span class="built_in">str</span>.lstrip() <span class="comment">#去除字符串左邊的空格</span></span><br><span class="line"><span class="built_in">str</span>.rstrip() <span class="comment">#去除字符串右邊的空格</span></span><br><span class="line"><span class="built_in">set</span>([])  <span class="comment">#去重</span></span><br><span class="line">[].sort()  <span class="comment">#排序 reverse=True 降序，reverse=False 升序（默認</span></span><br><span class="line"><span class="built_in">str</span>.upper() <span class="comment"># 小寫轉大寫</span></span><br><span class="line"><span class="built_in">str</span>.lower() <span class="comment"># 大寫轉小寫</span></span><br><span class="line"><span class="built_in">str</span>.capitalize() <span class="comment"># 第1個 字母轉大寫</span></span><br><span class="line"><span class="built_in">str</span>.title() <span class="comment"># 每個單字 字母轉大寫</span></span><br></pre></td></tr></table></figure>

<h2 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新增值方式</span></span><br><span class="line">dic[<span class="string">&#x27;a&#x27;</span>] = <span class="number">1</span></span><br><span class="line">dic.setdefault(<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 取全部keys建立list</span></span><br><span class="line">dic = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="string">&#x27;AAA&#x27;</span>,<span class="string">&#x27;X&#x27;</span>:<span class="string">&#x27;XXX&#x27;</span>&#125;</span><br><span class="line">dic_key_list = <span class="built_in">list</span>(dic.keys())</span><br></pre></td></tr></table></figure>

<h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">[data[i:i+<span class="number">100</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">100</span>)]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="class"><a href="#class" class="headerlink" title="class"></a>class</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ClassTest</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    new 和 init 的區別</span></span><br><span class="line"><span class="string">    __new__所接收的第一個參數是cls，而__init__所接收的第一個參數是self。</span></span><br><span class="line"><span class="string">    這因為當我們調用__new__的時候，該類的實例還並不存在，也就是self所引用的對象還不存在，</span></span><br><span class="line"><span class="string">    所以需要接收一個類作為參數，從而產生一個實例。</span></span><br><span class="line"><span class="string">    而我們當調用__init__的時候，實例已經存在，</span></span><br><span class="line"><span class="string">    因此__init__接受self作為第一個參數並對該實例進行必要的初始化操作。</span></span><br><span class="line"><span class="string">    這意味著__init__在__new__之後被調用的。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    zxc = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">clz, size, x, y</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        此函數不常用到，使用時機：工廠函數、制定框架</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__new__&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> size:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">object</span>.__new__(clz)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, size, x, y</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        初始化函數，時常用到</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(self.zxc)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__init__&#x27;</span>)</span><br><span class="line">        self.x, self.y = x, y</span><br><span class="line">        self.size = size</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        a = ClassTest()</span></span><br><span class="line"><span class="string">        a 是不可調用對象(不行執行 a() )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        而__call__是讓 a 可以被調用(可執行 a() )</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__call__&#x27;</span>)</span><br><span class="line">        self.x, self.y = x, y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        當重新賦值或刪除時調用</span></span><br><span class="line"><span class="string">        ex:</span></span><br><span class="line"><span class="string">        a = ClassTest()</span></span><br><span class="line"><span class="string">        a = None</span></span><br><span class="line"><span class="string">        del a</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__del__&#x27;</span>)</span><br><span class="line">ClassTest(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)(<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="except"><a href="#except" class="headerlink" title="except"></a>except</h2><ul>
<li>方法1 自行創建 Exception</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, value</span>)：</span><br><span class="line">        self.value = value</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">raise</span> TestException(value = <span class="string">&#x27;Exception mag&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e.value)</span><br></pre></td></tr></table></figure>

<ul>
<li>方法2原生Exception</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ex = TestException()</span><br><span class="line">    ex.value = <span class="string">&#x27;Exception mag&#x27;</span></span><br><span class="line">    <span class="keyword">raise</span> ex</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;value&#x27;</span>):  <span class="comment"># 判斷有無包含 這個ID的物件</span></span><br><span class="line">        <span class="built_in">print</span>(e.value)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="format"><a href="#format" class="headerlink" title="format"></a>format</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">text = <span class="string">&#x27;asdasd&#x27;</span></span><br><span class="line"><span class="comment"># 基本</span></span><br><span class="line"><span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比較新的python</span></span><br><span class="line"><span class="string">f&#x27;<span class="subst">&#123;text&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他用法</span></span><br><span class="line"><span class="string">&quot;&#123;proto&#125;://&#123;host&#125;/&quot;</span>.<span class="built_in">format</span>(proto=<span class="string">&quot;https&quot;</span> host=<span class="string">&quot;host&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進階用法</span></span><br><span class="line"><span class="string">&quot;&#123;proto&#125;://&#123;host&#125;/&quot;</span>.<span class="built_in">format</span>(proto=<span class="string">&quot;https&quot;</span> <span class="keyword">if</span> text <span class="keyword">else</span> <span class="string">&quot;http&quot;</span>, host=host)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="imp"><a href="#imp" class="headerlink" title="imp"></a>imp</h2><ul>
<li>重新啟動模組</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> imp <span class="keyword">import</span> reload</span><br><span class="line">reload(selenium)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="shutil"><a href="#shutil" class="headerlink" title="shutil"></a>shutil</h2><ul>
<li>複製檔案或資料夾</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">shutil.move(&lt;oldPath&gt;, &lt;newPath&gt;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="pilow"><a href="#pilow" class="headerlink" title="pilow"></a>pilow</h2><ul>
<li>打開檔案</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line">img = Image.<span class="built_in">open</span>(io.BytesIO(<span class="string">&#x27;&lt;bytes&gt;&#x27;</span>))</span><br><span class="line">img = Image.<span class="built_in">open</span>(&lt;filename&gt;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="objectpath"><a href="#objectpath" class="headerlink" title="objectpath"></a>objectpath</h2><p><a href="https://pypi.org/project/objectpath/">參考連結</a></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> objectpath <span class="keyword">import</span> Tree</span><br><span class="line">tree = Tree(telex)</span><br><span class="line">mark_path = <span class="string">&#x27;$.元宏電傳.土地標示部&#x27;</span></span><br><span class="line">mark_data = self.tree.execute(mark_path)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>SQL-tutorial</title>
    <url>/2022/09/28/SQL-tutorial/</url>
    <content><![CDATA[<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><ul>
<li><p>SQL 語法介紹</p>
<ul>
<li><strong><a href="#%E7%AF%A9%E9%81%B8"><code>篩選</code></a></strong></li>
<li><strong><a href="#%E6%8E%92%E5%BA%8F%E3%80%81%E9%A1%AF%E7%A4%BA"><code>排序、顯示</code></a></strong>  </li>
<li><strong><a href="#%E5%87%BD%E6%95%B8"><code>函數</code></a></strong>  </li>
<li><strong><a href="#%E5%89%B5%E5%BB%BA"><code>創建</code></a></strong>  </li>
<li><strong><a href="#%E6%B8%85%E7%A9%BA"><code>清空</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="../README.md"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="篩選"><a href="#篩選" class="headerlink" title="篩選"></a>篩選</h2><h3 id="SELECT-FROM"><a href="#SELECT-FROM" class="headerlink" title="SELECT_FROM"></a>SELECT_FROM</h3><p>選取(顯示)欄位，在表格裡</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位&quot; <span class="keyword">FROM</span> &quot;資料庫名稱&quot;.&quot;表格名&quot;;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> lbor_v2.tasks_transcripttasks</span><br><span class="line"><span class="keyword">SELECT</span> `priority` <span class="keyword">FROM</span> tasks_transcripttasks</span><br></pre></td></tr></table></figure>

<h3 id="Distinct"><a href="#Distinct" class="headerlink" title="Distinct"></a>Distinct</h3><p>列出所有不同的值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> &quot;欄位名&quot; <span class="keyword">FROM</span> &quot;表格名&quot;;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `priority` <span class="keyword">FROM</span> tasks_transcripttasks;</span><br></pre></td></tr></table></figure>

<h3 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h3><p>條件式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot;</span><br><span class="line"><span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;條件&quot;;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tasks_transcripttasks</span><br><span class="line"><span class="keyword">WHERE</span> `priority`<span class="operator">&gt;</span><span class="number">90</span>;</span><br></pre></td></tr></table></figure>

<h3 id="and-or"><a href="#and-or" class="headerlink" title="and or"></a>and or</h3><p>where 後面條件式可以用 or and 連接， ( ) 用來代表條件的先後次序。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot;</span><br><span class="line"><span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;簡單條件&quot;</span><br><span class="line">&#123;[<span class="keyword">AND</span><span class="operator">|</span><span class="keyword">OR</span>] &quot;簡單條件&quot;&#125;<span class="operator">+</span>;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tasks_transcripttasks</span><br><span class="line"><span class="keyword">WHERE</span> `priority`<span class="operator">&gt;</span><span class="number">90</span></span><br><span class="line"><span class="keyword">and</span> (`update_time` <span class="operator">&gt;=</span> <span class="string">&#x27;2019-01-01&#x27;</span> <span class="keyword">and</span> `file_token` <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">Null</span>);</span><br></pre></td></tr></table></figure>

<h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><p>取欄位中包含所需要的關鍵字</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot; <span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;欄位名&quot; <span class="keyword">IN</span> (<span class="string">&#x27;值一&#x27;</span>, <span class="string">&#x27;值二&#x27;</span>, ...);</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tasks_transcripttasks</span><br><span class="line"><span class="keyword">WHERE</span> owners_count <span class="keyword">IN</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="discrete"><a href="#discrete" class="headerlink" title="discrete"></a>discrete</h3><p>取範圍內的所有資料</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot; <span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;欄位名&quot; <span class="keyword">BETWEEN</span> <span class="string">&#x27;值一&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;值二&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tasks_transcripttasks</span><br><span class="line"><span class="keyword">WHERE</span> `update_time` <span class="keyword">BETWEEN</span> <span class="string">&#x27;2019-01-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2019-02-01&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="link"><a href="#link" class="headerlink" title="link"></a>link</h3><p>LIKE 能讓我們依據一個模式 (pattern) 來找出我們要的資料</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot; <span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;欄位名&quot; <span class="keyword">LIKE</span> &#123;模式&#125;;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">% (百分比符號)：代表零個、一個、或數個字母。</span></span><br><span class="line"><span class="string">_ (底線)：代表剛好一個字母。</span></span><br><span class="line"><span class="string">萬用字元是與 LIKE 關鍵字一起使用的。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tasks_transcripttasks</span><br><span class="line"><span class="keyword">WHERE</span> `lbkey` <span class="keyword">LIKE</span> <span class="string">&#x27;D%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2in1"><a href="#2in1" class="headerlink" title="2in1"></a>2in1</h3><p>比對資料表 在表1而不在表2的資料</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot; <span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;欄位名&quot; <span class="keyword">LIKE</span> &#123;模式&#125;;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">% (百分比符號)：代表零個、一個、或數個字母。</span></span><br><span class="line"><span class="string">_ (底線)：代表剛好一個字母。</span></span><br><span class="line"><span class="string">萬用字元是與 LIKE 關鍵字一起使用的。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> lkey_list.lkey, use_zone.lkey</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(<span class="keyword">SELECT</span> lkey <span class="keyword">FROM</span> `land_lkey_list` <span class="keyword">WHERE</span> `lkey` <span class="keyword">LIKE</span> <span class="string">&#x27;D_39%&#x27;</span>) lkey_list</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">join</span></span><br><span class="line">(<span class="keyword">SELECT</span> lkey <span class="keyword">FROM</span> `land_use_zone` <span class="keyword">WHERE</span> `lkey` <span class="keyword">LIKE</span> <span class="string">&#x27;D_39%&#x27;</span>) use_zone</span><br><span class="line"><span class="keyword">ON</span> lkey_list.lkey <span class="operator">=</span> use_zone.lkey</span><br><span class="line"><span class="keyword">WHERE</span> use_zone.lkey <span class="keyword">IS</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#SQL">↥ TOP</a></p>
</blockquote>
<h2 id="排序、顯示"><a href="#排序、顯示" class="headerlink" title="排序、顯示"></a>排序、顯示</h2><h3 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER_BY"></a>ORDER_BY</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位名&quot; <span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line">[<span class="keyword">WHERE</span> &quot;條件&quot;]</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> &quot;欄位名&quot; [<span class="keyword">ASC</span>, <span class="keyword">DESC</span>];</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">ASC 結果會以由小往大的順序列出</span></span><br><span class="line"><span class="string">DESC 結果會以由大往小的順序列出</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tasks_transcripttasks</span><br><span class="line"><span class="keyword">WHERE</span> `lbkey` <span class="keyword">LIKE</span> <span class="string">&#x27;D%&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `lbkey` <span class="keyword">ASC</span>;</span><br><span class="line"></span><br><span class="line"># 也可以用欄位的順序</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">2</span> <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure>

<h3 id="LIMIT"><a href="#LIMIT" class="headerlink" title="LIMIT"></a>LIMIT</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">查詢前 2 筆資料</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> TABLE_NAME LIMIT <span class="number">2</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> TABLE_NAME LIMIT <span class="number">0</span>, <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> TABLE_NAME LIMIT <span class="number">1</span>, <span class="number">3</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#SQL">↥ TOP</a></p>
</blockquote>
<h2 id="函數"><a href="#函數" class="headerlink" title="函數"></a>函數</h2><h3 id="數學運算"><a href="#數學運算" class="headerlink" title="數學運算"></a>數學運算</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">% 取餘</span></span><br><span class="line"><span class="string">MOD 取餘</span></span><br><span class="line"><span class="string">* 乘</span></span><br><span class="line"><span class="string">/ 除</span></span><br><span class="line"><span class="string">DIV 除(整數)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">+</span></span><br><span class="line"><span class="string">-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> (`machine_id`<span class="operator">*</span><span class="number">2</span>) DIV <span class="number">2</span> <span class="keyword">FROM</span> tasks_machinethreadstatus</span><br></pre></td></tr></table></figure>

<h3 id="AVG-COUNT-MAX-MIN-SUM"><a href="#AVG-COUNT-MAX-MIN-SUM" class="headerlink" title="AVG, COUNT, MAX, MIN, SUM"></a>AVG, COUNT, MAX, MIN, SUM</h3><p>計算函數</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;函數名&quot;(&quot;欄位名&quot;)</span><br><span class="line"><span class="keyword">FROM</span> &quot;表格名&quot;;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">AVG (平均)</span></span><br><span class="line"><span class="string">COUNT (計數)</span></span><br><span class="line"><span class="string">MAX (最大值)</span></span><br><span class="line"><span class="string">MIN (最小值)</span></span><br><span class="line"><span class="string">SUM (總合)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(`machine_id`) <span class="keyword">FROM</span> tasks_machinethreadstatus</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span>, <span class="built_in">MAX</span>(`machine_id`) <span class="keyword">FROM</span> tasks_machinethreadstatus</span><br></pre></td></tr></table></figure>

<h3 id="GROUP-BY"><a href="#GROUP-BY" class="headerlink" title="GROUP_BY"></a>GROUP_BY</h3><p>分組</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位1&quot;, <span class="built_in">SUM</span>(&quot;欄位2&quot;)</span><br><span class="line"><span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> &quot;欄位1&quot;;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> `city`, <span class="built_in">SUM</span>(`gaias_quota`)</span><br><span class="line"><span class="keyword">FROM</span> tasks_proxyassign</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> `city`;</span><br></pre></td></tr></table></figure>

<h3 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h3><p>函數產生的值來設定條件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;欄位1&quot;, <span class="built_in">SUM</span>(&quot;欄位2&quot;)</span><br><span class="line"><span class="keyword">FROM</span> &quot;表格名&quot;</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> &quot;欄位1&quot;</span><br><span class="line"><span class="keyword">HAVING</span> (函數條件);</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> `city`, <span class="built_in">SUM</span>(`gaias_quota`)</span><br><span class="line"><span class="keyword">FROM</span> tasks_proxyassign</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> `city`</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(`gaias_quota`)<span class="operator">&gt;</span><span class="number">500000</span>;</span><br></pre></td></tr></table></figure>

<h3 id="as-alias-別名"><a href="#as-alias-別名" class="headerlink" title="as (alias 別名)"></a>as (alias 別名)</h3><p>建立 欄位別名 表格別名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">建立方式</span></span><br><span class="line"><span class="string">欄位1 AS 欄位別名</span></span><br><span class="line"><span class="string">表格名 AS 表格別名</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> &quot;表格別名&quot;.&quot;欄位1&quot; &quot;欄位別名&quot;</span><br><span class="line"><span class="keyword">FROM</span> &quot;表格名&quot; &quot;表格別名&quot;;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> proxyassign.`city`, <span class="built_in">SUM</span>(proxyassign.`gaias_quota`) <span class="keyword">AS</span> `tatol`</span><br><span class="line"><span class="keyword">FROM</span> tasks_proxyassign <span class="keyword">AS</span> proxyassign</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> `city`</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(`gaias_quota`)<span class="operator">&gt;</span><span class="number">500000</span>;</span><br></pre></td></tr></table></figure>

<h3 id="內部連接-inner-join"><a href="#內部連接-inner-join" class="headerlink" title="內部連接(inner join)"></a>內部連接(inner join)</h3><p>兩個表格內都有同樣的值，那一筆資料才會被選出。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A1.Region_Name REGION, <span class="built_in">SUM</span>(A2.Sales) SALES</span><br><span class="line"><span class="keyword">FROM</span> Geography A1, Store_Information A2</span><br><span class="line"><span class="keyword">WHERE</span> A1.Store_Name <span class="operator">=</span> A2.Store_Name</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> A1.Region_Name;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> area.city, <span class="built_in">COUNT</span>(lbkey)</span><br><span class="line"><span class="keyword">FROM</span> `tasks_buildingtaskv2` v2, `tasks_areapriority` area</span><br><span class="line"><span class="keyword">WHERE</span> v2.city <span class="operator">=</span> area.city</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> area.city;</span><br></pre></td></tr></table></figure>

<h3 id="CONCAT"><a href="#CONCAT" class="headerlink" title="CONCAT"></a>CONCAT</h3><p>欄位字串合併</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(Region_Name, Store_Name) <span class="keyword">FROM</span> Geography</span><br><span class="line"><span class="keyword">WHERE</span> Store_Name <span class="operator">=</span> <span class="string">&#x27;Boston&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;台灣&#x27;</span>, `city_name`, `area_name`) <span class="keyword">AS</span> city_area</span><br><span class="line"><span class="keyword">FROM</span> tasks_areapriority;</span><br></pre></td></tr></table></figure>

<h3 id="SUBSTR"><a href="#SUBSTR" class="headerlink" title="SUBSTR"></a>SUBSTR</h3><p>截取</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># SUBSTR (str, pos, len)</span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(Store_Name, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">FROM</span> Geography</span><br><span class="line"><span class="keyword">WHERE</span> Store_Name <span class="operator">=</span> <span class="string">&#x27;Los Angeles&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(`city_name`, <span class="number">1</span>, <span class="number">2</span>) <span class="keyword">AS</span> city</span><br><span class="line"><span class="keyword">FROM</span> tasks_areapriority;</span><br></pre></td></tr></table></figure>

<h3 id="TRIM"><a href="#TRIM" class="headerlink" title="TRIM"></a>TRIM</h3><p>移除掉一個字串中的字頭或字尾</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># TRIM : 頭尾</span><br><span class="line"># LTRIM : 頭</span><br><span class="line"># RTRIM : 尾</span><br><span class="line"></span><br><span class="line"># <span class="built_in">TRIM</span> ( [ [位置] [要移除的字串] <span class="keyword">FROM</span> ] 字串)</span><br><span class="line"># <span class="keyword">LEADING</span> (起頭), <span class="keyword">TRAILING</span> (結尾), <span class="keyword">or</span> <span class="keyword">BOTH</span> (起頭及結尾)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TRIM</span>(<span class="keyword">BOTH</span> <span class="string">&#x27;系&#x27;</span> <span class="keyword">FROM</span> `owners_message`)</span><br><span class="line"><span class="keyword">FROM</span> tasks_buildinglog</span><br></pre></td></tr></table></figure>

<h3 id="LENGTH-長度"><a href="#LENGTH-長度" class="headerlink" title="LENGTH (長度)"></a>LENGTH (長度)</h3><p>長度函數是用來找出一個字串的長度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Region_Name, Length (Region_Name)</span><br><span class="line"><span class="keyword">FROM</span> Geography;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> LENGTH(`token`) <span class="keyword">AS</span> length <span class="keyword">FROM</span> tasks_machine;</span><br></pre></td></tr></table></figure>

<h3 id="Replace"><a href="#Replace" class="headerlink" title="Replace"></a>Replace</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> REPLACE (Region_Name, <span class="string">&#x27;ast&#x27;</span>, <span class="string">&#x27;astern&#x27;</span>)</span><br><span class="line"><span class="keyword">FROM</span> Geography;</span><br><span class="line"></span><br><span class="line"># lbor_v2 ex:</span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(ip, <span class="string">&#x27;122&#x27;</span>, <span class="string">&#x27;000&#x27;</span>)</span><br><span class="line"><span class="keyword">FROM</span> tasks_machine;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#SQL">↥ TOP</a></p>
</blockquote>
<h2 id="創建"><a href="#創建" class="headerlink" title="創建"></a>創建</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;表格名&quot;</span><br><span class="line">(&quot;欄位 1&quot; &quot;欄位 1 資料種類&quot;,</span><br><span class="line">&quot;欄位 2&quot; &quot;欄位 2 資料種類&quot;,</span><br><span class="line">... );</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#SQL">↥ TOP</a></p>
</blockquote>
<h2 id="清空"><a href="#清空" class="headerlink" title="清空"></a>清空</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> &quot;表格名&quot;;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.1keydata.com/tw/sql/sqlcreate.html">SQL 參考</a></p>
<blockquote>
<p><a href="#SQL">↥ TOP</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>py-thread</title>
    <url>/2022/09/28/py-thread/</url>
    <content><![CDATA[<h1 id="thread"><a href="#thread" class="headerlink" title="thread"></a>thread</h1><ul>
<li><p>threading, Queue, lock, Multithreading 線程處理</p>
<ul>
<li><strong><a href="#threading"><code>threading</code></a></strong></li>
<li><strong><a href="#Queue"><code>Queue</code></a></strong></li>
<li><strong><a href="#lock"><code>lock</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="../README.md"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="threading"><a href="#threading" class="headerlink" title="threading"></a>threading</h2><h3 id="建立與運行子執行緒"><a href="#建立與運行子執行緒" class="headerlink" title="建立與運行子執行緒"></a>建立與運行子執行緒</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒使用的函式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Child thread:&quot;</span>, i)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一個子執行緒</span></span><br><span class="line">t = threading.Thread(target = job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒啟動</span></span><br><span class="line">t.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒作業</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Main thread:&quot;</span>, i)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待子執行緒結束</span></span><br><span class="line">t.join()</span><br></pre></td></tr></table></figure>

<h3 id="多個子執行緒與參數"><a href="#多個子執行緒與參數" class="headerlink" title="多個子執行緒與參數"></a>多個子執行緒與參數</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒使用的函式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Thread&quot;</span>, num)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 創建5個子執行緒</span></span><br><span class="line"><span class="comment"># 新增再列表並啟用</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    thread = threading.Thread(target = job, args = (i,))</span><br><span class="line">    <span class="comment">#若要傳入參數，可以設定 args ，設定格式一定要是 Tuple(變數名稱, )</span></span><br><span class="line">    threads.append(thread)</span><br><span class="line">    threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    threads[i].join()</span><br></pre></td></tr></table></figure>

<h3 id="物件導向-class"><a href="#物件導向-class" class="headerlink" title="物件導向 (class)"></a>物件導向 (class)</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyThread</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, num</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyThread, self).__init__()</span><br><span class="line">        <span class="comment"># or threading.Thread.__init__(self)</span></span><br><span class="line">        <span class="comment"># 初始化繼承物件</span></span><br><span class="line">        self.num = num</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 線程啟動運行函式</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Thread&quot;</span>, self.num)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    thread  = MyThread(i)</span><br><span class="line">    threads.append(thread)</span><br><span class="line">    threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    threads[i].join()</span><br></pre></td></tr></table></figure>

<p><a href="#thread">↥ TOP</a></p>
<h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><h3 id="運算完把資料傳回主線程"><a href="#運算完把資料傳回主線程" class="headerlink" title="運算完把資料傳回主線程"></a>運算完把資料傳回主線程</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>(<span class="params">num, q</span>):</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Thread&quot;</span>, num)</span><br><span class="line">    time.sleep(randint(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line">    <span class="comment"># put 儲存</span></span><br><span class="line">    q.put(num)</span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line">q = queue.Queue()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    thread = threading.Thread(target = job, args = (i, q, ))</span><br><span class="line">    threads.append(thread)</span><br><span class="line">    threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="comment"># get 取出</span></span><br><span class="line">    <span class="built_in">print</span>(q.get())</span><br><span class="line">    threads[i].join()</span><br></pre></td></tr></table></figure>

<h3 id="把資料傳進子線程運算"><a href="#把資料傳進子線程運算" class="headerlink" title="把資料傳進子線程運算"></a>把資料傳進子線程運算</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>(<span class="params">num, q</span>):</span><br><span class="line">    <span class="comment"># qsize 剩餘數量</span></span><br><span class="line">    <span class="keyword">while</span> q.qsize() &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># get 取出</span></span><br><span class="line">        <span class="built_in">print</span>(q.get())</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line">q = queue.Queue()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="comment"># put 儲存</span></span><br><span class="line">    q.put(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    thread = threading.Thread(target = job, args = (i, q, ))</span><br><span class="line">    threads.append(thread)</span><br><span class="line">    threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    threads[i].join()</span><br></pre></td></tr></table></figure>

<p><a href="#thread">↥ TOP</a></p>
<h2 id="lock"><a href="#lock" class="headerlink" title="lock"></a>lock</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>(<span class="params">num, q, lock</span>):</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Thread&quot;</span>, num)</span><br><span class="line">    <span class="comment"># 鎖定</span></span><br><span class="line">    lock.acquire()</span><br><span class="line">    <span class="comment"># 隨機休息</span></span><br><span class="line">    time.sleep(randint(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line">    <span class="comment"># 解鎖</span></span><br><span class="line">    lock.release()</span><br><span class="line">    <span class="comment"># put 儲存</span></span><br><span class="line">    q.put(num)</span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line">q = queue.Queue()</span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    thread = threading.Thread(target = job, args = (i, q, lock, ))</span><br><span class="line">    threads.append(thread)</span><br><span class="line">    threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="comment"># get 取出</span></span><br><span class="line">    <span class="built_in">print</span>(q.get())</span><br><span class="line">    threads[i].join()</span><br></pre></td></tr></table></figure>

<p><a href="#thread">↥ TOP</a></p>
]]></content>
  </entry>
  <entry>
    <title>pandas organize</title>
    <url>/2022/09/27/pandas-organize/</url>
    <content><![CDATA[<h3 id="regex-related"><a href="#regex-related" class="headerlink" title="regex related"></a>regex related</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#之二十二 -&gt;  之二二</span><br><span class="line">df[&#x27;回傳門牌&#x27;] =  df.回傳門牌.replace(&#123;r&#x27;(之.)十(.)&#x27; : r&#x27;\1\2&#x27;&#125;, regex=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#段小小 -&gt; 段小</span><br><span class="line">df[&#x27;地號_小段&#x27;]=df[&#x27;地號_小段&#x27;].str.replace(r&#x27;小$&#x27;, &#x27;&#x27;, regex=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#蔦松路56巷46號五樓之一 get 五樓之一</span><br><span class="line">df[&#x27;號之後&#x27;] = df[&#x27;回傳門牌&#x27;].str.extract(&#x27;(?&lt;=號)(.*)&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#蔦松路56巷46號五樓之一 get  蔦松路56巷46號</span><br><span class="line">df[&#x27;號之前包含號&#x27;]= df[&#x27;回傳門牌&#x27;].str.extract(&#x27;(.*號)&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#七樓之七 -&gt; 7樓之7</span><br><span class="line">dict1 = &#123;&quot;一&quot; : &#x27;1&#x27;,&quot;二&quot; : &#x27;2&#x27;,&quot;三&quot; : &#x27;3&#x27;,&quot;四&quot; : &#x27;4&#x27;,&quot;五&quot; : &#x27;5&#x27;,</span><br><span class="line">&quot;六&quot; : &#x27;6&#x27;,&quot;七&quot; : &#x27;7&#x27;,&quot;八&quot; : &#x27;8&#x27;,&quot;九&quot; : &#x27;9&#x27;&#125;</span><br><span class="line">df[&quot;號之後&quot;]= df[&quot;號之後&quot;].replace( dict1,regex=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#忠孝里忠孝東路 -&gt; 忠孝東路</span><br><span class="line">df[&#x27;地址&#x27;]=df[&#x27;地址&#x27;].str.replace(r&#x27;^..里&#x27;, &#x27;&#x27;, regex=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#2十 -&gt; 2@0</span><br><span class="line">df[&#x27;號之後&#x27;] =  df.號之後.replace(&#123;r&#x27;(\d)十&#x27; : r&#x27;\1@0&#x27;&#125;, regex=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#十1 -&gt; 1@1</span><br><span class="line">df[&#x27;號之後&#x27;] =  df.號之後.replace(&#123;r&#x27;十(\d)&#x27; : r&#x27;1@\1&#x27;&#125;, regex=True)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="filter-related"><a href="#filter-related" class="headerlink" title="filter related"></a>filter related</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#left join two dataframe</span><br><span class="line">res = pd.merge(df1,df2, on=[&#x27;行政區&#x27;,&#x27;縣市&#x27;,&#x27;地址&#x27;],how=&#x27;left&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#column &#x27;bkey&#x27; filter contains &#x27;查&#x27;</span><br><span class="line">df= df[res[&quot;bkey&quot;].str.contains(&#x27;查&#x27;)==False]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#column &#x27;bkey&#x27; filter not contains &#x27;查&#x27;</span><br><span class="line">df= df[~df[&quot;bkey&quot;].str.contains(&quot;查&quot;)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#column &#x27;地號_小段&#x27; filter not NaN</span><br><span class="line">res[res[&#x27;地號_小段&#x27;].notna()]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Change the value of &#x27;地號_段_小段&#x27; condition based on whether &#x27;地號_小段&#x27; is null  </span><br><span class="line">df[&#x27;地號_段_小段&#x27;] = np.where(df[&#x27;地號_小段&#x27;].isnull(), df[&#x27;地號_段_小段&#x27;], df[&#x27;地號_段_小段&#x27;]+df[&#x27;地號_小段&#x27;]+&quot;小段&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Change the value of &#x27;完成日&#x27; condition based on whether &#x27;完成日&#x27; contains(&#x27;民國&#x27;)</span><br><span class="line">df[&#x27;完成日&#x27;] = np.where(df[&#x27;完成日&#x27;].str.contains(&#x27;民國&#x27;), df[&#x27;完成日&#x27;], &quot;民國&quot;+df[&#x27;完成日&#x27;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 15號二樓之1 -&gt; 15號  , 13號3樓 -&gt; 13號</span><br><span class="line">df[&#x27;地址&#x27;] = df[&#x27;地址&#x27;].str.replace(&#x27;(?&lt;=\d號).*&#x27;,&#x27;&#x27;, regex=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#fill in the blanks in order</span><br><span class="line">res[&#x27;使照號&#x27;].fillna(method=&#x27;ffill&#x27;, inplace=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#column &#x27;地址&#x27; filter contains&#x27;里&#x27; not NaN</span><br><span class="line">df[df[&#x27;地址&#x27;].str.contains(&quot;里&quot;,na= False)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 00000號 -&gt; 00000 , 0001號 -&gt; 0001</span><br><span class="line"></span><br><span class="line">df[&#x27;使照提取&#x27;] = df[&#x27;使照相關&#x27;].str.extract(&#x27;(\d&#123;1,5&#125;)(?=號)&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 005 -&gt; 00005</span><br><span class="line">df[&#x27;使照提取&#x27;] = df[&#x27;使照提取&#x27;].str.zfill(5)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#add new column by combine another column </span><br><span class="line">df[&#x27;使照提取&#x27;]= df[&#x27;完工日&#x27;].str[:3] +&#x27;-&#x27;+ df[&#x27;使照提取&#x27;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h1><h2 id="建立表單"><a href="#建立表單" class="headerlink" title="建立表單"></a>建立表單</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">dates = pd.date_range(<span class="string">&quot;20130101&quot;</span>, periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">6</span>, <span class="number">4</span>), index=dates, columns=<span class="built_in">list</span>(<span class="string">&quot;ABCD&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定欄位寫入清單</span></span><br><span class="line">df2 = df.copy()</span><br><span class="line">df2[<span class="string">&quot;E&quot;</span>] = [<span class="string">&quot;one&quot;</span>, <span class="string">&quot;one&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="string">&quot;three&quot;</span>, <span class="string">&quot;four&quot;</span>, <span class="string">&quot;three&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 寫入系列(建立表格 以20130101向後6列 寫入在F欄)</span></span><br><span class="line">s1 = pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], index=pd.date_range(<span class="string">&quot;20130101&quot;</span>, periods=<span class="number">6</span>))</span><br><span class="line">df[<span class="string">&quot;F&quot;</span>] = s1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 標籤寫入</span></span><br><span class="line">df.at[<span class="string">&#x27;2013-01-03&#x27;</span>, <span class="string">&quot;A&quot;</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 位置寫入</span></span><br><span class="line">df.iat[<span class="number">0</span>, <span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用NumPy填滿寫入</span></span><br><span class="line">df.loc[:, <span class="string">&quot;D&quot;</span>] = np.array([<span class="number">5</span>] * <span class="built_in">len</span>(df))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 對表格迴圈寫入(大於0就轉負數)</span></span><br><span class="line">df2 = df.copy()</span><br><span class="line">df2[df2 &gt; <span class="number">0</span>] = -df2</span><br></pre></td></tr></table></figure>

<h2 id="查看資料"><a href="#查看資料" class="headerlink" title="查看資料"></a>查看資料</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看前5筆資料</span></span><br><span class="line">df.head()</span><br><span class="line">df.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看後5筆資料</span></span><br><span class="line">df.tail()</span><br><span class="line">df.tail(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.index)</span><br><span class="line"><span class="built_in">print</span>(df.columns)</span><br></pre></td></tr></table></figure>

<h2 id="取得資料"><a href="#取得資料" class="headerlink" title="取得資料"></a>取得資料</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得欄</span></span><br><span class="line">df.A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取得第0~3列</span></span><br><span class="line">df[:<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定欄</span></span><br><span class="line">df[<span class="string">&quot;A&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定列</span></span><br><span class="line">df.loc[<span class="string">&#x27;2013-01-04&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用標籤選擇、切片</span></span><br><span class="line"><span class="comment"># [列, 欄]</span></span><br><span class="line">df.loc[:, [<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>]]</span><br><span class="line">df.loc[<span class="string">&quot;20130102&quot;</span>:<span class="string">&quot;20130104&quot;</span>, [<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>]]</span><br><span class="line">df.loc[<span class="string">&quot;20130102&quot;</span>, [<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 獲取值</span></span><br><span class="line">df.loc[<span class="string">&quot;20130102&quot;</span>, <span class="string">&quot;A&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用位置選擇、切片</span></span><br><span class="line"><span class="comment"># [列, 欄]</span></span><br><span class="line">df.iloc[:, <span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">df.iloc[<span class="number">3</span>:<span class="number">5</span>, <span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">df.iloc[<span class="number">1</span>, <span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 獲取值</span></span><br><span class="line">df.iloc[<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更快速</span></span><br><span class="line">df.iat[<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 布林索引</span></span><br><span class="line"><span class="comment"># 指定欄比大小</span></span><br><span class="line">df[df[<span class="string">&quot;A&quot;</span>] &gt; <span class="number">0</span>]</span><br><span class="line">df[df &gt; <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定欄包含</span></span><br><span class="line">df2[df2[<span class="string">&quot;E&quot;</span>].isin([<span class="string">&quot;two&quot;</span>, <span class="string">&quot;four&quot;</span>])]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># axis 1欄 0列</span></span><br><span class="line"><span class="comment"># ascending True正序 False反序</span></span><br><span class="line">df.sort_index(axis=<span class="number">0</span>, ascending=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照欄位名稱排序</span></span><br><span class="line">df.sort_values(by=<span class="string">&quot;A&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>pandas</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>selenium</title>
    <url>/2022/09/28/selenium/</url>
    <content><![CDATA[<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><ul>
<li><p>selenium 環境建制</p>
<ul>
<li><strong><a href="#%E7%92%B0%E5%A2%83%E5%BB%BA%E5%88%B6"><code>環境建制</code></a></strong></li>
<li><strong>[<code>更新ubuntu chrome版本</code>](#更新ubuntu chrome版本)</strong></li>
<li><strong><a href="#%E7%A7%BB%E5%85%A5%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8%E8%B3%87%E6%96%99%E5%A4%BE%EF%BC%86%E6%9B%B4%E8%AE%8A%E6%AC%8A%E9%99%90"><code>移入環境變數資料夾＆更變權限</code></a></strong></li>
</ul>
</li>
<li><p>selenium 使用</p>
<ul>
<li><strong><a href="#%E9%96%8B%E5%95%9F"><code>開啟</code></a></strong></li>
<li><strong><a href="#%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0"><code>查找元素</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="../README.md"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="環境建制"><a href="#環境建制" class="headerlink" title="環境建制"></a>環境建制</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用chrome</span></span><br><span class="line"><span class="comment">#確認chrome版本,下載對應chromedriver</span></span><br><span class="line"><span class="comment">#將chromedriver移入到有環境變數的資料夾並變更使用權限</span></span><br></pre></td></tr></table></figure>

<h2 id="更新ubuntu-chrome版本"><a href="#更新ubuntu-chrome版本" class="headerlink" title="更新ubuntu chrome版本"></a>更新ubuntu chrome版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 從Google Linux取得金鑰</span></span><br><span class="line">wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -</span><br><span class="line">sudo sh -c <span class="string">&#x27;echo &quot;deb http://dl.google.com/linux/chrome/deb/ stable main&quot; &gt;&gt; /etc/apt/sources.list.d/google-chrome.list&#x27;</span></span><br><span class="line">sudo apt-get update</span><br><span class="line"><span class="comment"># 更新chrome版本</span></span><br><span class="line">sudo apt-get --only-upgrade install google-chrome-stable</span><br><span class="line"><span class="comment"># 下載最新chrome</span></span><br><span class="line">sudo apt-get install google-chrome-beta</span><br></pre></td></tr></table></figure>

<h2 id="移入環境變數資料夾＆更變權限"><a href="#移入環境變數資料夾＆更變權限" class="headerlink" title="移入環境變數資料夾＆更變權限"></a>移入環境變數資料夾＆更變權限</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#將chromedriver移入到有環境變數的資料夾並變更使用權限</span></span><br><span class="line">sudo <span class="built_in">cp</span> chromedriver /usr/local/bin/</span><br><span class="line">sudo <span class="built_in">chmod</span> a+x /usr/local/bin/chromedriver</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
<h2 id="開啟"><a href="#開啟" class="headerlink" title="開啟"></a>開啟</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#啟動chrome</span></span><br><span class="line">driver = webdriver.Chrome(executable_path=<span class="string">&#x27;/usr/local/bin/chromedriver&#x27;</span>)</span><br><span class="line"><span class="comment">#開啟網頁</span></span><br><span class="line">driver.get(<span class="string">&#x27;https://google.com&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h2><ul>
<li>方法1 單一元素find_element_by_</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">driver.find_element_by_name()<span class="comment">#回傳字串</span></span><br></pre></td></tr></table></figure>

<ul>
<li>方法2 複數元素find_elements_by_</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">driver.find_elements_by_name()<span class="comment">#回傳list</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#python">↥ TOP</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>ubuntu-basic-tutorial</title>
    <url>/2022/09/28/ubuntu-basic-tutorial/</url>
    <content><![CDATA[<h1 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h1><ul>
<li><p>ubuntu 設定</p>
<ul>
<li><strong><a href="#%E8%BB%9F%E9%AB%94%E5%AE%89%E8%A3%9D%E6%9B%B4%E6%96%B0%E4%BF%AE%E5%BE%A9%E7%A7%BB%E9%99%A4"><code>軟體安裝更新修復移除</code></a></strong></li>
<li><strong><a href="#%E5%B8%B8%E7%94%A8%E8%BB%9F%E9%AB%94%E5%AE%89%E8%A3%9D"><code>常用軟體安裝</code></a></strong></li>
<li><strong><a href="#%E5%8F%B3%E9%8D%B5%E9%81%B8%E9%A0%85"><code>右鍵選項</code></a></strong></li>
<li><strong><a href="#%E6%94%B9%E8%AE%8A%E7%B7%A8%E7%A2%BC"><code>改變編碼</code></a></strong></li>
<li><strong><a href="#%E6%B8%85%E7%A9%BA%E4%BA%A4%E6%8F%9B%E8%A8%98%E6%86%B6%E9%AB%94"><code>清空交換記憶體</code></a></strong></li>
<li><strong><a href="#%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%AC%8A%E9%99%90"><code>修改文件權限</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="https://haha505254.github.io/archives/"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="ubuntu-設定"><a href="#ubuntu-設定" class="headerlink" title="ubuntu 設定"></a>ubuntu 設定</h2><h3 id="軟體安裝更新修復移除"><a href="#軟體安裝更新修復移除" class="headerlink" title="軟體安裝更新修復移除"></a>軟體安裝更新修復移除</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新應用程式</span></span><br><span class="line">sudo apt update</span><br><span class="line"><span class="comment"># 修復錯誤</span></span><br><span class="line">sudo apt --fix-broken install -y</span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">sudo apt upgrade -y</span><br><span class="line"><span class="comment"># 軟體移除</span></span><br><span class="line">sudo apt autoremove &lt;name&gt; -y</span><br><span class="line"><span class="comment"># 自動移除</span></span><br><span class="line">sudo apt autoremove -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb檔 安裝</span></span><br><span class="line">sudo dpkg -i XXXXXX.deb</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#ubuntu">↥ TOP</a></p>
</blockquote>
<h3 id="常用軟體安裝"><a href="#常用軟體安裝" class="headerlink" title="常用軟體安裝"></a>常用軟體安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝 神燈 文字編輯器</span></span><br><span class="line">sudo apt install geany -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝 可分割的終端機</span></span><br><span class="line">sudo apt install terminator -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝 圖片編輯器</span></span><br><span class="line">sudo apt install gimp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝 文件比較工具</span></span><br><span class="line">sudo apt install meld</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#ubuntu">↥ TOP</a></p>
</blockquote>
<h3 id="右鍵選項"><a href="#右鍵選項" class="headerlink" title="右鍵選項"></a>右鍵選項</h3><p>18.04以上的版本右鍵新增的選單改為手動新增模板</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/模板/<span class="string">&quot;新增文字檔&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#ubuntu">↥ TOP</a></p>
</blockquote>
<h3 id="改變編碼"><a href="#改變編碼" class="headerlink" title="改變編碼"></a>改變編碼</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 單一檔案</span></span><br><span class="line">iconv -f big5 -t utf8 &lt;filename&gt; -o &lt;filename&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 資料夾內 全部檔案</span></span><br><span class="line">find -<span class="built_in">type</span> f -<span class="built_in">exec</span> iconv --verbose -f BIG-5 -t UTF-8 &#123;&#125; -o &#123;&#125; \;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#ubuntu">↥ TOP</a></p>
</blockquote>
<h3 id="清空交換記憶體"><a href="#清空交換記憶體" class="headerlink" title="清空交換記憶體"></a>清空交換記憶體</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a &amp;&amp; swapon -a</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#ubuntu">↥ TOP</a></p>
</blockquote>
<h3 id="修改文件權限"><a href="#修改文件權限" class="headerlink" title="修改文件權限"></a>修改文件權限</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#777為最高權限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> 777 -R &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="#ubuntu">↥ TOP</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>tqdm</title>
    <url>/2022/09/28/tqdm/</url>
    <content><![CDATA[<h1 id="進度條"><a href="#進度條" class="headerlink" title="進度條"></a>進度條</h1><h2 id="目錄"><a href="#目錄" class="headerlink" title="目錄"></a>目錄</h2><ul>
<li>tqdm, rich 進度條 <ul>
<li><strong><a href="#%E9%80%B2%E5%BA%A6%E6%A2%9D(tqdm)"><code>進度條(tqdm)</code></a></strong></li>
<li><strong><a href="#%E9%80%B2%E5%BA%A6%E6%A2%9D(rich)"><code>進度條(rich)</code></a></strong></li>
</ul>
</li>
<li><strong><a href="../README.md"><code>回主畫面</code></a></strong></li>
</ul>
<h2 id="進度條-tqdm"><a href="#進度條-tqdm" class="headerlink" title="進度條(tqdm)"></a>進度條(tqdm)</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm, trange</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進度條使用tqdm的函式 (t帶筆數)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job1</span>(<span class="params">t</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tqdm(<span class="built_in">range</span>(t)):</span><br><span class="line">        <span class="comment"># 每筆執行程式段碼</span></span><br><span class="line">        time.sleep(<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進度條使用trange的函式 (t帶筆數)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job2</span>(<span class="params">t</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> trange(t):</span><br><span class="line">        <span class="comment"># 每筆執行程式段碼</span></span><br><span class="line">        time.sleep(<span class="number">0.01</span>)</span><br><span class="line"><span class="comment"># 範例 (job1和job2效果一樣)</span></span><br><span class="line">job1(<span class="number">1000</span>)</span><br><span class="line"><span class="comment"># output：100%|██████████| 1000/1000 [00:10&lt;00:00, 96.76it/s]</span></span><br></pre></td></tr></table></figure>

<h2 id="進度條-rich"><a href="#進度條-rich" class="headerlink" title="進度條(rich)"></a>進度條(rich)</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> rich.progress <span class="keyword">import</span> (</span><br><span class="line">    BarColumn,</span><br><span class="line">    DownloadColumn,</span><br><span class="line">    Progress,</span><br><span class="line">    TimeRemainingColumn,</span><br><span class="line">    TimeElapsedColumn,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進度條使用rich的函式 (t帶筆數)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rich</span>(<span class="params">t</span>):</span><br><span class="line">    <span class="comment"># 可設定樣式</span></span><br><span class="line">    progress = Progress(</span><br><span class="line">        <span class="comment"># 標題</span></span><br><span class="line">        <span class="string">&quot;[progress.description]&#123;task.description&#125;&quot;</span>,</span><br><span class="line">        <span class="comment"># 進度百分比</span></span><br><span class="line">        <span class="string">&quot;[progress.percentage]&#123;task.percentage:&gt;3.1f&#125;%&quot;</span>,</span><br><span class="line">        <span class="comment"># 顯示條</span></span><br><span class="line">        BarColumn(),</span><br><span class="line">        <span class="comment"># 下載進度</span></span><br><span class="line">        DownloadColumn(),</span><br><span class="line">        <span class="string">&quot;[&quot;</span>,</span><br><span class="line">        <span class="comment"># 經過的時間</span></span><br><span class="line">        TimeElapsedColumn(),</span><br><span class="line">        <span class="string">&quot;&lt;&quot;</span>,</span><br><span class="line">        <span class="comment"># 估計的剩餘時間</span></span><br><span class="line">        TimeRemainingColumn(),</span><br><span class="line">        <span class="string">&quot;]&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">with</span> progress <span class="keyword">as</span> pro:</span><br><span class="line">        task = pro.add_task(<span class="string">&quot;[green]進度條&quot;</span>, total=t)</span><br><span class="line">        <span class="keyword">for</span> step <span class="keyword">in</span> <span class="built_in">range</span>(t):</span><br><span class="line">            <span class="comment"># 程式區段</span></span><br><span class="line">            pro.update(task, advance=<span class="number">1</span>)</span><br><span class="line">            time.sleep(<span class="number">0.01</span>)</span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">rich(<span class="number">666</span>)</span><br><span class="line"><span class="comment"># output：進度條 100.0% ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 666/666 bytes [ 0:00:06 &lt; 0:00:00 ]</span></span><br></pre></td></tr></table></figure>

<p><a href="#%E9%80%B2%E5%BA%A6%E6%A2%9D">↥ TOP</a></p>
]]></content>
  </entry>
  <entry>
    <title>ubuntu-crontab</title>
    <url>/2022/09/28/ubuntu-crontab/</url>
    <content><![CDATA[<h1 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h1><ul>
<li><p>crontab排程介紹</p>
<ul>
<li><strong><a href="#%E6%8C%87%E4%BB%A4%E4%BB%8B%E7%B4%B9"><code>指令介紹</code></a></strong></li>
<li><strong><a href="#%E8%AA%9E%E6%B3%95%E4%BB%8B%E7%B4%B9"><code>語法介紹</code></a></strong></li>
<li><strong><a href="#%E7%AF%84%E4%BE%8B"><code>範例</code></a></strong>  </li>
<li><strong><a href="#%E7%B6%B2%E7%AB%99%E6%A8%A1%E6%93%AC%E5%8F%83%E8%80%83"><code>網站模擬參考</code></a></strong></li>
</ul>
</li>
<li><p><strong><a href="../README.md"><code>回主畫面</code></a></strong></p>
</li>
</ul>
<h2 id="指令介紹"><a href="#指令介紹" class="headerlink" title="指令介紹"></a>指令介紹</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#列出該使用者擁有的 crontab 指令:</span></span><br><span class="line">crontab -l</span><br><span class="line"></span><br><span class="line"><span class="comment">#編輯該使用者的 crontab 指令:</span></span><br><span class="line">crntab -e</span><br><span class="line"></span><br><span class="line"><span class="comment">#將使用者的 crontab 全部清除:</span></span><br><span class="line">crontab -r</span><br><span class="line"></span><br><span class="line"><span class="comment">#改變排程的執行身分: crontab -u user filename:</span></span><br><span class="line">crontab -u</span><br><span class="line"></span><br><span class="line"><span class="comment">#重啟,更新指令後需要重啟:</span></span><br><span class="line">sudo /etc/init.d/cron restart</span><br></pre></td></tr></table></figure>

<h2 id="語法介紹"><a href="#語法介紹" class="headerlink" title="語法介紹"></a>語法介紹</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">┌───────────── 分鐘   (<span class="number">0</span> - <span class="number">59</span>)</span><br><span class="line">│ ┌─────────── 小時   (<span class="number">0</span> - <span class="number">23</span>)</span><br><span class="line">│ │ ┌───────── 日     (<span class="number">1</span> - <span class="number">31</span>)</span><br><span class="line">│ │ │ ┌─────── 月     (<span class="number">1</span> - <span class="number">12</span>)</span><br><span class="line">│ │ │ │ ┌───── 星期幾 (<span class="number">0</span> - <span class="number">7</span>，<span class="number">0</span> 是週日，<span class="number">6</span> 是週六，<span class="number">7</span> 也是週日)</span><br><span class="line">│ │ │ │ │</span><br><span class="line">* * * * * /path/to/command</span><br></pre></td></tr></table></figure>

<h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">                                    連接符號</span><br><span class="line">                                     │             啟動虛擬環境</span><br><span class="line">時間設定           進入程式資料夾      │               │ </span><br><span class="line">│                    │               │               │  </span><br><span class="line">│                    │               │               │ </span><br><span class="line"><span class="operator">*</span><span class="operator">/</span><span class="number">2</span> <span class="operator">*</span> <span class="operator">*</span> <span class="operator">*</span> <span class="operator">*</span> cd <span class="operator">~</span><span class="operator">/</span>owen<span class="operator">/</span>creaditor_add <span class="operator">&amp;&amp;</span> <span class="operator">/</span>home<span class="operator">/</span>owen<span class="operator">/</span>py36<span class="operator">/</span>bin<span class="operator">/</span>python3 </span><br><span class="line"></span><br><span class="line">┌─── 要執行的py檔</span><br><span class="line">│</span><br><span class="line">creaditors_data.py</span><br></pre></td></tr></table></figure>

<h2 id="網站模擬參考"><a href="#網站模擬參考" class="headerlink" title="網站模擬參考"></a>網站模擬參考</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">https://crontab.guru/#*_*_*/5_*_*</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
