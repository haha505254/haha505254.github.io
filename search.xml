<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>how to deploy django to heroku</title>
    <url>/2022/09/27/django_to_heroku/</url>
    <content><![CDATA[<p>winget heroku CLI</p>
<p>example:專案名稱 my_blog_project</p>
<p>先把專案env裏頭的pip list 寫出來 <strong>pip freeze &gt; requirements.txt</strong></p>
<p>heroku官網 create new app</p>
<p>桌面直接py -m venv herokuenv</p>
<p>把專案資料夾複製進herokuenv 裏頭 改名my_blog_projecthero</p>
<p>把my_blog_projecthero的.git資料夾刪掉</p>
<p>進入herokuenv虛擬環境 pip install gunicorn</p>
<p>並把my_blog_project的<strong>requirements.txt 通通載入安裝 pip install -r requirements.txt</strong></p>
<p>於my_blog_projecthero新增「Procfile」檔案 並撰寫 web: gunicorn my_blog_project.wsgi</p>
<p>於settings.py檔新增 STATIC_ROOT &#x3D; os.path.join(BASE_DIR, ‘static’)</p>
<p>接著執行 python manage.py collectstatic</p>
<p>接著 pip install whitenoise</p>
<ul>
<li><p>接著，開啟Django專案的settings.py，在MIDDLEWARE串列的地方，加入WhiteNoiseMiddleware，如下範例：</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
</ul>
<p>把舊的<strong>requirements.txt 刪除</strong></p>
<p>接著<strong>pip freeze &gt; requirements.txt 把最新的requirements導出來(包含gunicorn與whitenoise)</strong></p>
<p>把settings.py的 ALLOWED_HOSTS &#x3D; [‘*’]</p>
<p>退出虛擬環境 deactivate</p>
<p>heroku login</p>
<p>git init</p>
<p>heroku git:remote -a <app_name></p>
<p>git add .</p>
<p>git commit -m “first commit”</p>
<p>git push heroku master</p>
]]></content>
  </entry>
  <entry>
    <title>pandas_regex</title>
    <url>/2022/09/27/pandas-regex/</url>
    <content><![CDATA[<p>之二十二 -&gt;  之二二<br>df[‘回傳門牌’] &#x3D;  df.回傳門牌.replace({r’(之.)十(.)’ : r’\1\2’}, regex&#x3D;True)</p>
<p>段小小 -&gt; 段小<br>df[‘地號_小段’]&#x3D;df[‘地號_小段’].str.replace(r’小$’, ‘’, regex&#x3D;True)</p>
<p>蔦松路56巷46號五樓之一 get 五樓之一<br>df[‘號之後’] &#x3D; df[‘回傳門牌’].str.extract(‘(?&lt;&#x3D;號)(.*)’)</p>
<p>蔦松路56巷46號五樓之一 get  蔦松路56巷46號<br>df[‘號之前包含號’]&#x3D; df[‘回傳門牌’].str.extract(‘(.*號)’)</p>
<p>七樓之七 -&gt; 7樓之7<br>dict1 &#x3D; {“一” : ‘1’,”二” : ‘2’,”三” : ‘3’,”四” : ‘4’,”五” : ‘5’<br>,”六” : ‘6’,”七” : ‘7’,”八” : ‘8’,”九” : ‘9’}<br>df[“號之後”]&#x3D; df[“號之後”].replace( dict1,regex&#x3D;True)</p>
<p>df[‘號之後’] &#x3D;  df.號之後.replace({r’(\d)十’ : r’\1@0’}, regex&#x3D;True)</p>
<p>df[‘號之後’] &#x3D;  df.號之後.replace({r’十(\d)’ : r‘1@\1’}, regex&#x3D;True)</p>
<p>res &#x3D; pd.merge(df1,df2, on&#x3D;[‘行政區’,’縣市’,’地址’],how&#x3D;’left’)</p>
<p>df&#x3D; df[res[“bkey”].str.contains(‘查’)&#x3D;&#x3D;False]</p>
<p>res[res[‘地號_小段’].str.contains(‘小’)&#x3D;&#x3D;True]</p>
<p>res[res[‘地號_小段’].notna()]</p>
<p>df[‘地號_段_小段’] &#x3D; np.where(df[‘地號_小段’].isnull(), df[‘地號_段_小段’], df[‘地號_段_小段’]+df[‘地號_小段’]+”小段”)</p>
<p>df[‘完成日’] &#x3D; np.where(df[‘完成日’].str.contains(‘民國’), df[‘完成日’], “民國”+df[‘完成日’])</p>
<p>df[‘地址’] &#x3D; df[‘地址’].str.replace(‘(?&lt;&#x3D;\d號).*’,’’, regex&#x3D;True)</p>
<p>df&#x3D; df[~df[“bkey”].str.contains(“查”)]</p>
<p>res[‘使照號’].fillna(method&#x3D;’ffill’, inplace&#x3D;True)</p>
<p>df[‘地址’]&#x3D;df[‘地址’].str.replace(r’^..里’, ‘’, regex&#x3D;True)</p>
<p>df[df[‘地址’].str.contains(“里”,na&#x3D; False) ]</p>
<p>df[‘使照提取’] &#x3D; df[‘使照相關’].str.extract(‘(\d{1,5})(?&#x3D;號)’)</p>
<p>df[‘使照提取’] &#x3D; df[‘使照提取’].str.zfill(5)</p>
<p>df[‘使照提取’]&#x3D; df[‘完工日’].str[:3] +’-‘+ df[‘使照提取’]</p>
]]></content>
  </entry>
</search>
